import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
import { HemisphereLightObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/HemisphereLight";
import { MapboxCameraObjNode } from "@polygonjs/plugin-mapbox/dist/src/engine/nodes/obj/MapboxCamera";
import { PerspectiveCameraObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/PerspectiveCamera";
import { RenderersNetworkObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/RenderersNetwork";
// sop
import { AddSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Add";
import { CSS2DObjectSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CSS2DObject";
import { CopySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Copy";
import { EventsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/EventsNetwork";
import { FileGLTFSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/FileGLTF";
import { HierarchySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Hierarchy";
import { MapboxTransformSopNode } from "@polygonjs/plugin-mapbox/dist/src/engine/nodes/sop/MapboxTransform";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { MergeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge";
import { PlaneHelperSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PlaneHelper";
import { TransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform";
// event
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";
// rop
import { CSS2DRendererRopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/rop/CSS2DRenderer";
// mat
import { MeshStandardMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandard";

export class PolySceneWithNodeMap_markers extends PolyScene {
  node(path: "/hemisphereLight1"): HemisphereLightObjNode;
  node(path: "/mapboxCamera1"): MapboxCameraObjNode;
  node(path: "/perspectiveCamera1"): PerspectiveCameraObjNode;
  node(path: "/perspectiveCamera1/events1"): EventsNetworkSopNode;
  node(
    path: "/perspectiveCamera1/events1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/grid"): GeoObjNode;
  node(path: "/grid/planeHelper1"): PlaneHelperSopNode;
  node(path: "/renderersNetwork1"): RenderersNetworkObjNode;
  node(path: "/renderersNetwork1/CSS2DRenderer1"): CSS2DRendererRopNode;
  node(path: "/geo1"): GeoObjNode;
  node(path: "/geo1/add1"): AddSopNode;
  node(path: "/geo1/fileGLTF1"): FileGLTFSopNode;
  node(path: "/geo1/transform1"): TransformSopNode;
  node(path: "/geo1/mapboxTransform1"): MapboxTransformSopNode;
  node(path: "/geo1/copy1"): CopySopNode;
  node(path: "/geo1/hierarchy1"): HierarchySopNode;
  node(path: "/geo1/CSS2DObject1"): CSS2DObjectSopNode;
  node(path: "/geo1/merge1"): MergeSopNode;
  node(path: "/geo1/transform2"): TransformSopNode;
  node(path: "/geo1/material1"): MaterialSopNode;
  node(path: "/geo1/MAT"): MaterialsNetworkSopNode;
  node(path: "/geo1/MAT/meshStandard1"): MeshStandardMatNode;
  node(path: "/geo1/add2"): AddSopNode;
  node(path: "/geo1/fileGLTF2"): FileGLTFSopNode;
  node(path: "/geo1/transform3"): TransformSopNode;
  node(path: "/geo1/mapboxTransform2"): MapboxTransformSopNode;
  node(path: "/geo1/copy2"): CopySopNode;
  node(path: "/geo1/hierarchy2"): HierarchySopNode;
  node(path: "/geo1/CSS2DObject2"): CSS2DObjectSopNode;
  node(path: "/geo1/merge2"): MergeSopNode;
  node(path: "/geo1/transform4"): TransformSopNode;
  node(path: "/geo1/material2"): MaterialSopNode;
  node(path: "/geo1/merge3"): MergeSopNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_markers {
  "hemisphereLight1--skyColor"?: ParamValueSerializedTypeMap["color"];
  "hemisphereLight1--skyColor-skyColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColor-skyColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColor-skyColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor"?: ParamValueSerializedTypeMap["color"];
  "hemisphereLight1--groundColor-groundColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor-groundColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor-groundColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position"?: ParamValueSerializedTypeMap["vector3"];
  "hemisphereLight1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positionx"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positiony"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positionz"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--name"?: ParamValueSerializedTypeMap["string"];
  "mapboxCamera1--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "mapboxCamera1--style"?: ParamValueSerializedTypeMap["string"];
  "mapboxCamera1--lngLat"?: ParamValueSerializedTypeMap["vector2"];
  "mapboxCamera1--lngLat-lngLatx"?: ParamValueSerializedTypeMap["float"];
  "mapboxCamera1--lngLat-lngLaty"?: ParamValueSerializedTypeMap["float"];
  "mapboxCamera1--lngLatx"?: ParamValueSerializedTypeMap["float"];
  "mapboxCamera1--lngLaty"?: ParamValueSerializedTypeMap["float"];
  "mapboxCamera1--zoom"?: ParamValueSerializedTypeMap["float"];
  "mapboxCamera1--zoomRange"?: ParamValueSerializedTypeMap["vector2"];
  "mapboxCamera1--zoomRange-zoomRangex"?: ParamValueSerializedTypeMap["float"];
  "mapboxCamera1--zoomRange-zoomRangey"?: ParamValueSerializedTypeMap["float"];
  "mapboxCamera1--zoomRangex"?: ParamValueSerializedTypeMap["float"];
  "mapboxCamera1--zoomRangey"?: ParamValueSerializedTypeMap["float"];
  "mapboxCamera1--pitch"?: ParamValueSerializedTypeMap["float"];
  "mapboxCamera1--bearing"?: ParamValueSerializedTypeMap["float"];
  "mapboxCamera1--updateParamsFromMap"?: ParamValueSerializedTypeMap["button"];
  "mapboxCamera1--allowDragRotate"?: ParamValueSerializedTypeMap["boolean"];
  "mapboxCamera1--addZoomControl"?: ParamValueSerializedTypeMap["boolean"];
  "mapboxCamera1--tlayerBuildings"?: ParamValueSerializedTypeMap["boolean"];
  "mapboxCamera1--tlayer3D"?: ParamValueSerializedTypeMap["boolean"];
  "mapboxCamera1--tlayerSky"?: ParamValueSerializedTypeMap["boolean"];
  "mapboxCamera1--setCSSRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "mapboxCamera1--CSSRenderer"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--transform"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--t"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--tx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--ty"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--tz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--rx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--ry"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--rz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--scale"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "perspectiveCamera1--camera"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--controls"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--updateFromControlsMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--display"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--fov"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--frameMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--expectedAspectRatio"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "perspectiveCamera1--layer"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--render"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--setScene"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--scene"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--setRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--renderer"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--setCSSRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--CSSRenderer"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--doPostProcess"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--postProcessNode"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1-events1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--enableKeys"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysPanSpeed"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysRotateSpeedVertical"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysRotateSpeedHorizontal"?: ParamValueSerializedTypeMap["float"];
  "grid--transform"?: ParamValueSerializedTypeMap["folder"];
  "grid--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "grid--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "grid--t"?: ParamValueSerializedTypeMap["vector3"];
  "grid--t-tx"?: ParamValueSerializedTypeMap["float"];
  "grid--t-ty"?: ParamValueSerializedTypeMap["float"];
  "grid--t-tz"?: ParamValueSerializedTypeMap["float"];
  "grid--tx"?: ParamValueSerializedTypeMap["float"];
  "grid--ty"?: ParamValueSerializedTypeMap["float"];
  "grid--tz"?: ParamValueSerializedTypeMap["float"];
  "grid--r"?: ParamValueSerializedTypeMap["vector3"];
  "grid--r-rx"?: ParamValueSerializedTypeMap["float"];
  "grid--r-ry"?: ParamValueSerializedTypeMap["float"];
  "grid--r-rz"?: ParamValueSerializedTypeMap["float"];
  "grid--rx"?: ParamValueSerializedTypeMap["float"];
  "grid--ry"?: ParamValueSerializedTypeMap["float"];
  "grid--rz"?: ParamValueSerializedTypeMap["float"];
  "grid--s"?: ParamValueSerializedTypeMap["vector3"];
  "grid--s-sx"?: ParamValueSerializedTypeMap["float"];
  "grid--s-sy"?: ParamValueSerializedTypeMap["float"];
  "grid--s-sz"?: ParamValueSerializedTypeMap["float"];
  "grid--sx"?: ParamValueSerializedTypeMap["float"];
  "grid--sy"?: ParamValueSerializedTypeMap["float"];
  "grid--sz"?: ParamValueSerializedTypeMap["float"];
  "grid--scale"?: ParamValueSerializedTypeMap["float"];
  "grid--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "grid--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "grid--display"?: ParamValueSerializedTypeMap["boolean"];
  "grid--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "grid-planeHelper1--size"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLine"?: ParamValueSerializedTypeMap["color"];
  "grid-planeHelper1--colorCenterLine-colorCenterLiner"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLine-colorCenterLineg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLine-colorCenterLineb"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLiner"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLineg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorCenterLineb"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGrid"?: ParamValueSerializedTypeMap["color"];
  "grid-planeHelper1--colorGrid-colorGridr"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGrid-colorGridg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGrid-colorGridb"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGridr"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGridg"?: ParamValueSerializedTypeMap["float"];
  "grid-planeHelper1--colorGridb"?: ParamValueSerializedTypeMap["float"];
  "renderersNetwork1-CSS2DRenderer1--sortObjects"?: ParamValueSerializedTypeMap["boolean"];
  "renderersNetwork1-CSS2DRenderer1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "renderersNetwork1-CSS2DRenderer1--fogNear"?: ParamValueSerializedTypeMap["float"];
  "renderersNetwork1-CSS2DRenderer1--fogFar"?: ParamValueSerializedTypeMap["float"];
  "renderersNetwork1-CSS2DRenderer1--css"?: ParamValueSerializedTypeMap["string"];
  "geo1--transform"?: ParamValueSerializedTypeMap["folder"];
  "geo1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "geo1--display"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-add1--createPoint"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-add1--pointsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-add1--position"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-add1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-add1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-add1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-add1--positionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-add1--positiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-add1--positionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-add1--connectInputPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-add1--connectToLastPoint"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF1--url"?: ParamValueSerializedTypeMap["string"];
  "geo1-fileGLTF1--draco"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF1--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF1--reload"?: ParamValueSerializedTypeMap["button"];
  "geo1-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--useBounds"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-mapboxTransform1--southWest"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-mapboxTransform1--southWest-southWestx"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--southWest-southWesty"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--southWestx"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--southWesty"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--northEast"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-mapboxTransform1--northEast-northEastx"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--northEast-northEasty"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--northEastx"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--northEasty"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--useZoom"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-mapboxTransform1--zoom"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--mapboxCamera"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-mapboxTransform1--zoomRange"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-mapboxTransform1--zoomRange-zoomRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--zoomRange-zoomRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--zoomRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--zoomRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform1--updateAlwaysAllowed"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-mapboxTransform1--updateAlways"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy1--count"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy1--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy1--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy1--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-hierarchy1--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy1--levels"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "geo1-hierarchy1--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-CSS2DObject1--useIdAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-CSS2DObject1--id"?: ParamValueSerializedTypeMap["string"];
  "geo1-CSS2DObject1--useClassAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-CSS2DObject1--className"?: ParamValueSerializedTypeMap["string"];
  "geo1-CSS2DObject1--useHTMLAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-CSS2DObject1--html"?: ParamValueSerializedTypeMap["string"];
  "geo1-CSS2DObject1--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-CSS2DObject1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "geo1-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-material1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material1--applyToChildren"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-MAT-meshStandard1--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard1--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshStandard1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-add2--createPoint"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-add2--pointsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-add2--position"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-add2--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-add2--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-add2--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-add2--positionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-add2--positiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-add2--positionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-add2--connectInputPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-add2--connectToLastPoint"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF2--url"?: ParamValueSerializedTypeMap["string"];
  "geo1-fileGLTF2--draco"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF2--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF2--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileGLTF2--reload"?: ParamValueSerializedTypeMap["button"];
  "geo1-transform3--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform3--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--useBounds"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-mapboxTransform2--southWest"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-mapboxTransform2--southWest-southWestx"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--southWest-southWesty"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--southWestx"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--southWesty"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--northEast"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-mapboxTransform2--northEast-northEastx"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--northEast-northEasty"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--northEastx"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--northEasty"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--useZoom"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-mapboxTransform2--zoom"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--mapboxCamera"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-mapboxTransform2--zoomRange"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-mapboxTransform2--zoomRange-zoomRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--zoomRange-zoomRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--zoomRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--zoomRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-mapboxTransform2--updateAlwaysAllowed"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-mapboxTransform2--updateAlways"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy2--count"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy2--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy2--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy2--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy2--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy2--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-hierarchy2--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy2--levels"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy2--objectMask"?: ParamValueSerializedTypeMap["string"];
  "geo1-hierarchy2--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-CSS2DObject2--useIdAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-CSS2DObject2--id"?: ParamValueSerializedTypeMap["string"];
  "geo1-CSS2DObject2--useClassAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-CSS2DObject2--className"?: ParamValueSerializedTypeMap["string"];
  "geo1-CSS2DObject2--useHTMLAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-CSS2DObject2--html"?: ParamValueSerializedTypeMap["string"];
  "geo1-CSS2DObject2--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-CSS2DObject2--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "geo1-merge2--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge2--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform4--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform4--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform4--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform4--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform4--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform4--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform4--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform4--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform4--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-material2--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material2--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material2--applyToChildren"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material2--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-merge3--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge3--inputsCount"?: ParamValueSerializedTypeMap["integer"];
}
