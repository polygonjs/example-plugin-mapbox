{
	"type": "meshBasicBuilder",
	"nodes": {
		"globals1": {
			"type": "globals"
		},
		"output1": {
			"type": "output",
			"inputs": [
				null,
				null,
				{
					"index": 2,
					"node": "floatToVec3_1",
					"output": "vec3"
				}
			]
		},
		"attribute1": {
			"type": "attribute",
			"params": {
				"name": "occlusion"
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"complement1": {
			"type": "complement",
			"params": {
				"in": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				{
					"index": 0,
					"node": "mix1",
					"output": "mix"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "in",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		},
		"floatToVec3_1": {
			"type": "floatToVec3",
			"inputs": [
				{
					"index": 0,
					"node": "complement1",
					"output": "val"
				},
				{
					"index": 1,
					"node": "complement1",
					"output": "val"
				},
				{
					"index": 2,
					"node": "complement1",
					"output": "val"
				}
			]
		},
		"mix1": {
			"type": "mix",
			"params": {
				"value0": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"value1": {
					"type": "float",
					"default_value": 0,
					"options": {
						"spare": true
					}
				},
				"blend": {
					"type": "float",
					"default_value": 0.5,
					"options": {
						"spare": true
					}
				}
			},
			"inputs": [
				null,
				{
					"index": 1,
					"node": "attribute1",
					"output": "val"
				},
				{
					"index": 2,
					"node": "paramOcclusionAmount",
					"output": "val"
				}
			],
			"connection_points": {
				"in": [
					{
						"name": "value0",
						"type": "float"
					},
					{
						"name": "value1",
						"type": "float"
					},
					{
						"name": "blend",
						"type": "float"
					}
				],
				"out": [
					{
						"name": "mix",
						"type": "float"
					}
				]
			}
		},
		"paramOcclusionAmount": {
			"type": "param",
			"params": {
				"name": "occlusionAmount"
			},
			"connection_points": {
				"in": [],
				"out": [
					{
						"name": "val",
						"type": "float"
					}
				]
			}
		}
	},
	"params": {
		"occlusionAmount": {
			"type": "float",
			"default_value": 0,
			"options": {
				"spare": true,
				"computeOnDirty": true,
				"cook": false
			},
			"raw_input": 1
		}
	},
	"selection": [
		"paramOcclusionAmount"
	],
	"persisted_config": {
		"material": {
			"metadata": {
				"version": 4.5,
				"type": "Material",
				"generator": "Material.toJSON"
			},
			"uuid": "D428A50F-576F-454C-A34F-7FF11D678F32",
			"type": "ShaderMaterial",
			"name": "/MAT/meshBasicBuilder_OCCLUSION",
			"depthFunc": 3,
			"depthTest": true,
			"depthWrite": true,
			"stencilWrite": false,
			"stencilWriteMask": 255,
			"stencilFunc": 519,
			"stencilRef": 0,
			"stencilFuncMask": 255,
			"stencilFail": 7680,
			"stencilZFail": 7680,
			"stencilZPass": 7680,
			"glslVersion": null,
			"uniforms": {
				"diffuse": {
					"type": "c",
					"value": 15658734
				},
				"opacity": {
					"value": 1
				},
				"map": {
					"value": null
				},
				"uvTransform": {
					"type": "m3",
					"value": [
						1,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						1
					]
				},
				"uv2Transform": {
					"type": "m3",
					"value": [
						1,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						1
					]
				},
				"alphaMap": {
					"value": null
				},
				"specularMap": {
					"value": null
				},
				"envMap": {
					"value": null
				},
				"flipEnvMap": {
					"value": -1
				},
				"reflectivity": {
					"value": 1
				},
				"refractionRatio": {
					"value": 0.98
				},
				"maxMipLevel": {
					"value": 0
				},
				"aoMap": {
					"value": null
				},
				"aoMapIntensity": {
					"value": 1
				},
				"lightMap": {
					"value": null
				},
				"lightMapIntensity": {
					"value": 1
				},
				"fogDensity": {
					"value": 0.00025
				},
				"fogNear": {
					"value": 1
				},
				"fogFar": {
					"value": 2000
				},
				"fogColor": {
					"type": "c",
					"value": 16777215
				},
				"v_POLY_param1_val": {
					"value": 0
				},
				"v_POLY_paramUseOcclusion_val": {
					"value": 1
				}
			},
			"vertexShader": "\n#include <common>\n\n\n\n// /MAT/meshBasicBuilder_OCCLUSION/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n// /MAT/meshBasicBuilder_OCCLUSION/attribute1\nattribute float occlusion;\n\n\n\n\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\n\n\t// /MAT/meshBasicBuilder_OCCLUSION/attribute1\n\tvarying_v_POLY_attribute1_val = float(occlusion);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/output1\n\tvec3 transformed = position;\n\tvec3 objectNormal = normal;\n\n\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n// removed:\n//\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n// removed:\n//\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n",
			"fragmentShader": "\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n\n\n\n// /MAT/meshBasicBuilder_OCCLUSION/complement1\nfloat complement(float x){return 1.0-x;}\nvec2 complement(vec2 x){return vec2(1.0-x.x, 1.0-x.y);}\nvec3 complement(vec3 x){return vec3(1.0-x.x, 1.0-x.y, 1.0-x.z);}\nvec4 complement(vec4 x){return vec4(1.0-x.x, 1.0-x.y, 1.0-x.z, 1.0-x.w);}\n\n\n\n\n\n\n\n\n// /MAT/meshBasicBuilder_OCCLUSION/paramUseOcclusion\nuniform float v_POLY_paramUseOcclusion_val;\n\n// /MAT/meshBasicBuilder_OCCLUSION/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n\n\n\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\n\n\t// /MAT/meshBasicBuilder_OCCLUSION/attribute1\n\tfloat v_POLY_attribute1_val = varying_v_POLY_attribute1_val;\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/mix1\n\tfloat v_POLY_mix1_mix = mix(0.0, v_POLY_attribute1_val, v_POLY_paramUseOcclusion_val);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/complement1\n\tfloat v_POLY_complement1_val = complement(v_POLY_mix1_mix);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/floatToVec3_1\n\tvec3 v_POLY_floatToVec3_1_vec3 = vec3(v_POLY_complement1_val, v_POLY_complement1_val, v_POLY_complement1_val);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/output1\n\tdiffuseColor.xyz = v_POLY_floatToVec3_1_vec3;\n\n\n\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",
			"lights": false
		},
		"uniforms_time_dependent": false,
		"uniforms_resolution_dependent": false,
		"param_uniform_pairs": [
			[
				"occlusionAmount",
				"v_POLY_paramUseOcclusion_val"
			]
		],
		"custom_materials": {
			"customDistanceMaterial": {
				"metadata": {
					"version": 4.5,
					"type": "Material",
					"generator": "Material.toJSON"
				},
				"uuid": "50B632EB-8DE7-491F-A107-1A457A82A767",
				"type": "ShaderMaterial",
				"depthFunc": 3,
				"depthTest": true,
				"depthWrite": true,
				"stencilWrite": false,
				"stencilWriteMask": 255,
				"stencilFunc": 519,
				"stencilRef": 0,
				"stencilFuncMask": 255,
				"stencilFail": 7680,
				"stencilZFail": 7680,
				"stencilZPass": 7680,
				"glslVersion": null,
				"uniforms": {
					"diffuse": {
						"type": "c",
						"value": 15658734
					},
					"opacity": {
						"value": 1
					},
					"map": {
						"value": null
					},
					"uvTransform": {
						"type": "m3",
						"value": [
							1,
							0,
							0,
							0,
							1,
							0,
							0,
							0,
							1
						]
					},
					"uv2Transform": {
						"type": "m3",
						"value": [
							1,
							0,
							0,
							0,
							1,
							0,
							0,
							0,
							1
						]
					},
					"alphaMap": {
						"value": null
					},
					"displacementMap": {
						"value": null
					},
					"displacementScale": {
						"value": 1
					},
					"displacementBias": {
						"value": 0
					},
					"referencePosition": {
						"type": "v3",
						"value": [
							0,
							0,
							0
						]
					},
					"nearDistance": {
						"value": 1
					},
					"farDistance": {
						"value": 1000
					},
					"v_POLY_param1_val": {
						"value": 0
					},
					"v_POLY_paramUseOcclusion_val": {
						"value": 1
					}
				},
				"defines": {
					"DEPTH_PACKING": 3201
				},
				"vertexShader": "\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n\n\n\n// /MAT/meshBasicBuilder_OCCLUSION/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n// /MAT/meshBasicBuilder_OCCLUSION/attribute1\nattribute float occlusion;\n\n\n\n\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n// removed:\n//\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n// removed:\n//\t#include <begin_vertex>\n\n\n\n\t// /MAT/meshBasicBuilder_OCCLUSION/attribute1\n\tvarying_v_POLY_attribute1_val = float(occlusion);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/output1\n\tvec3 transformed = position;\n\tvec3 objectNormal = normal;\n\n\n\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n",
				"fragmentShader": "\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n\n\n\n// /MAT/meshBasicBuilder_OCCLUSION/complement1\nfloat complement(float x){return 1.0-x;}\nvec2 complement(vec2 x){return vec2(1.0-x.x, 1.0-x.y);}\nvec3 complement(vec3 x){return vec3(1.0-x.x, 1.0-x.y, 1.0-x.z);}\nvec4 complement(vec4 x){return vec4(1.0-x.x, 1.0-x.y, 1.0-x.z, 1.0-x.w);}\n\n\n\n\n\n\n\n\n// /MAT/meshBasicBuilder_OCCLUSION/paramUseOcclusion\nuniform float v_POLY_paramUseOcclusion_val;\n\n// /MAT/meshBasicBuilder_OCCLUSION/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n\n\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\n\n\t// /MAT/meshBasicBuilder_OCCLUSION/attribute1\n\tfloat v_POLY_attribute1_val = varying_v_POLY_attribute1_val;\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/mix1\n\tfloat v_POLY_mix1_mix = mix(0.0, v_POLY_attribute1_val, v_POLY_paramUseOcclusion_val);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/complement1\n\tfloat v_POLY_complement1_val = complement(v_POLY_mix1_mix);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/floatToVec3_1\n\tvec3 v_POLY_floatToVec3_1_vec3 = vec3(v_POLY_complement1_val, v_POLY_complement1_val, v_POLY_complement1_val);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/output1\n\tdiffuseColor.xyz = v_POLY_floatToVec3_1_vec3;\n\n\n\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n",
				"lights": false
			},
			"customDepthMaterial": {
				"metadata": {
					"version": 4.5,
					"type": "Material",
					"generator": "Material.toJSON"
				},
				"uuid": "BAD0037F-8D0C-415E-A559-A9D369028865",
				"type": "ShaderMaterial",
				"depthFunc": 3,
				"depthTest": true,
				"depthWrite": true,
				"stencilWrite": false,
				"stencilWriteMask": 255,
				"stencilFunc": 519,
				"stencilRef": 0,
				"stencilFuncMask": 255,
				"stencilFail": 7680,
				"stencilZFail": 7680,
				"stencilZPass": 7680,
				"glslVersion": null,
				"uniforms": {
					"diffuse": {
						"type": "c",
						"value": 15658734
					},
					"opacity": {
						"value": 1
					},
					"map": {
						"value": null
					},
					"uvTransform": {
						"type": "m3",
						"value": [
							1,
							0,
							0,
							0,
							1,
							0,
							0,
							0,
							1
						]
					},
					"uv2Transform": {
						"type": "m3",
						"value": [
							1,
							0,
							0,
							0,
							1,
							0,
							0,
							0,
							1
						]
					},
					"alphaMap": {
						"value": null
					},
					"displacementMap": {
						"value": null
					},
					"displacementScale": {
						"value": 1
					},
					"displacementBias": {
						"value": 0
					},
					"v_POLY_param1_val": {
						"value": 0
					},
					"v_POLY_paramUseOcclusion_val": {
						"value": 1
					}
				},
				"defines": {
					"DEPTH_PACKING": 3201
				},
				"vertexShader": "\n#include <common>\n\n\n\n// /MAT/meshBasicBuilder_OCCLUSION/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n// /MAT/meshBasicBuilder_OCCLUSION/attribute1\nattribute float occlusion;\n\n\n\n\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.\n// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for\n// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n// removed:\n//\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n// removed:\n//\t#include <begin_vertex>\n\n\n\n\t// /MAT/meshBasicBuilder_OCCLUSION/attribute1\n\tvarying_v_POLY_attribute1_val = float(occlusion);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/output1\n\tvec3 transformed = position;\n\tvec3 objectNormal = normal;\n\n\n\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvHighPrecisionZW = gl_Position.zw;\n\n}\n",
				"fragmentShader": "\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n\n\n\n// /MAT/meshBasicBuilder_OCCLUSION/complement1\nfloat complement(float x){return 1.0-x;}\nvec2 complement(vec2 x){return vec2(1.0-x.x, 1.0-x.y);}\nvec3 complement(vec3 x){return vec3(1.0-x.x, 1.0-x.y, 1.0-x.z);}\nvec4 complement(vec4 x){return vec4(1.0-x.x, 1.0-x.y, 1.0-x.z, 1.0-x.w);}\n\n\n\n\n\n\n\n\n// /MAT/meshBasicBuilder_OCCLUSION/paramUseOcclusion\nuniform float v_POLY_paramUseOcclusion_val;\n\n// /MAT/meshBasicBuilder_OCCLUSION/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n\n\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\n\n\t// /MAT/meshBasicBuilder_OCCLUSION/attribute1\n\tfloat v_POLY_attribute1_val = varying_v_POLY_attribute1_val;\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/mix1\n\tfloat v_POLY_mix1_mix = mix(0.0, v_POLY_attribute1_val, v_POLY_paramUseOcclusion_val);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/complement1\n\tfloat v_POLY_complement1_val = complement(v_POLY_mix1_mix);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/floatToVec3_1\n\tvec3 v_POLY_floatToVec3_1_vec3 = vec3(v_POLY_complement1_val, v_POLY_complement1_val, v_POLY_complement1_val);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/output1\n\tdiffuseColor.xyz = v_POLY_floatToVec3_1_vec3;\n\n\n\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n",
				"lights": false
			},
			"customDepthDOFMaterial": {
				"metadata": {
					"version": 4.5,
					"type": "Material",
					"generator": "Material.toJSON"
				},
				"uuid": "45378053-D4E4-4B5C-919B-24A67C6A09C4",
				"type": "ShaderMaterial",
				"depthFunc": 3,
				"depthTest": true,
				"depthWrite": true,
				"stencilWrite": false,
				"stencilWriteMask": 255,
				"stencilFunc": 519,
				"stencilRef": 0,
				"stencilFuncMask": 255,
				"stencilFail": 7680,
				"stencilZFail": 7680,
				"stencilZPass": 7680,
				"glslVersion": null,
				"uniforms": {
					"mNear": {
						"value": 0
					},
					"mFar": {
						"value": 10
					},
					"v_POLY_param1_val": {
						"value": 0
					},
					"v_POLY_paramUseOcclusion_val": {
						"value": 1
					}
				},
				"vertexShader": "#include <common>\n\nvarying float vViewZDepth;\n\n// INSERT DEFINES\n\n\n\n// /MAT/meshBasicBuilder_OCCLUSION/attribute1\nvarying float varying_v_POLY_attribute1_val;\n\n// /MAT/meshBasicBuilder_OCCLUSION/attribute1\nattribute float occlusion;\n\n\n\n\n\n\n\nvoid main() {\n\n\t// INSERT BODY\n\n\n\n\t// /MAT/meshBasicBuilder_OCCLUSION/attribute1\n\tvarying_v_POLY_attribute1_val = float(occlusion);\n\t\n\t// /MAT/meshBasicBuilder_OCCLUSION/output1\n\tvec3 transformed = position;\n\tvec3 objectNormal = normal;\n\n\n\n\n\n\t#include <project_vertex>\n\n\tvViewZDepth = - mvPosition.z;\n}",
				"fragmentShader": "uniform float mNear;\nuniform float mFar;\n\nvarying float vViewZDepth;\n\nvoid main() {\n\n\tfloat color = 1.0 - smoothstep( mNear, mFar, vViewZDepth );\n\tgl_FragColor = vec4( vec3( color ), 1.0 );\n\n}\n",
				"lights": false
			}
		}
	}
}