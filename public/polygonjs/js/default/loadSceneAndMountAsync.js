import{a as y}from"./chunk-4EIDCPOJ.js";import"./chunk-KBNISIIW.js";var R=(e=>(e.EXPORT_MANIFEST="scene/export_manifest.json",e.CODE_PREFIX="scene/code",e.PROPERTIES="scene/code/properties.json",e.EDITOR="scene/editor.json",e.ASSETS="scene/assets.json",e.POLYGONJS="js/all.js",e.SCENE_DATA_LOADER="js/sceneDataLoader.js",e.POLY_CONFIG="js/polyConfig.js",e.JS_FILES="scene/js_files.json",e.POSTER="images/poster.png",e))(R||{});var S=class{static async importSceneData(s){s.editorMode==null&&(s.editorMode=!1);let t=s.manifest,n=s.urlPrefix||R.CODE_PREFIX,r=Object.keys(t.nodes),a=[];for(let o of r){let u=t.nodes[o],O=`${n}/root/${o}.json?t=${u}`;a.push(O)}let l=`${n}/root.json?t=${t.root}`,d=`${n}/properties.json?t=${t.properties}`,m=[l,d];if(s.editorMode){let o=Date.now();m.push(`${n}/ui.json?t=${o}`)}for(let o of a)m.push(o);let p=0,h=m.length,P=o=>{let u=y.sceneData;s.onProgress&&s.onProgress(u.start+u.mult*o)},f=m.map(async o=>{let u=await fetch(o);return p++,P(p/h),u}),_=await Promise.all(f),i=[];for(let o of _)i.push(await o.json());let E={root:i[0],properties:i[1]},c=2;s.editorMode&&(E.ui=i[2],c+=1);let g={},M=Object.keys(t.nodes);for(let o=0;o<M.length;o++){let u=M[o],O=i[o+c];g[u]=O}return this.assemble(E,M,g)}static async assemble(s,t,n){let r={root:s.root,properties:s.properties,ui:s.ui};for(let a=0;a<t.length;a++){let l=t[a],d=n[l];this.insert_child_data(r.root,l,d)}return r}static insert_child_data(s,t,n){let r=t.split("/");if(r.length==1)s.nodes||(s.nodes={}),s.nodes[t]=n;else{let a=r.shift(),l=r.join("/"),d=s.nodes[a];this.insert_child_data(d,l,n)}}};var T="1617472807456",I="1612314518215",L={geo1:"1617471306194","geo1/MAT":"1617471306194","geo1/MAT/meshLambertBuilder_dinosaur1":"1617471306194","geo1/MAT/meshLambertBuilder_dinosaur2":"1617472807456",COP:"1617471306194",perspectiveCamera1:"1612314202673","perspectiveCamera1/events1":"1617471306194"},A={properties:T,root:I,nodes:L};var D=async e=>await S.importSceneData({urlPrefix:"./polygonjs/scenes/default",manifest:A,onProgress:e.onProgress});var C=async function(e){let{onProgress:s,domElement:t,configureSceneData:n}=e,r=e.runRegister!=null?e.runRegister:!0,l=(e.loadModules!=null?e.loadModules:!0)?["DRACOLoader","GLTFLoader"]:[],d=l.map(c=>import("./modules/"+c+(e.moduleImportSuffix||""))),m=[import("./loadSceneFromSceneData-4Q6FTZD5.js"),D({onProgress:s}),...d],p=await Promise.all(m),{Poly:h,loadSceneFromSceneData_default:P}=p[0],f=p[1];n&&n(f);let _=[];for(let c=2;c<p.length;c++)_.push(p[c]);let i=0;for(let c of l){let g=c+"Module";h.registerModule(_[i][g]),i++}return await P({onProgress:s,sceneData:f,domElement:t,runRegister:r})};export{C as loadSceneAndMountAsync_default};
